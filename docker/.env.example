# General Settings
# ---------------
# Application version (default: v0.5.0)
VERSION=v0.10.0
# Nginx service port (default: 80)
NGINX_PORT=80

# Django Core Settings
# -------------------
# Django secret key - KEEP THIS SECRET
# you can generate a new one using `openssl rand -base64 32`
SECRET_KEY="django-insecure-el4wo4a4--=f0+ag#omp@^w4eq^8v4(scda&1a(td_y2@=sh6&"
# API encryption key - KEEP THIS SECRET
# you can generate a new one using `python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"`
API_ENCRYPTION_KEY="8zSd6JIuC7ovfZ4AoxG_XmhubW6CPnQWW7Qe_4TD1TQ="
# Debug mode (set to False in production)
DEBUG=True
# Allowed hosts (comma-separated) read more at https://docs.djangoproject.com/en/4.2/ref/settings/#allowed-hosts
ALLOWED_HOSTS=*
# Language code
LANGUAGE_CODE=en-us
# Time zone
TIME_ZONE=UTC
# Internationalization
USE_I18N=True
# Timezone support
USE_TZ=True
# Static files root
STATIC_ROOT=storage/static/
# Media files root
MEDIA_ROOT=storage/media/
# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO
# Redis Cache URL
REDIS_URL=redis://redis:6379/1


# Frontend URL for CORS and redirects it used in the invitation emails and links
FRONTEND_URL=http://localhost

# Database Settings
# ----------------
# PostgreSQL database settings
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_PASSWORD=postgres
POSTGRES_USER=postgres
POSTGRES_DB=postgres


# Redis Settings
# -------------
# Redis URL for Celery broker
CELERY_BROKER_URL=redis://redis:6379/0
# Redis URL for Django cache/locks
REDIS_LOCKER_URL=redis://redis:6379/3
# Celery results backend (django-db or redis)
CELERY_RESULT_BACKEND=django-db

# JWT Settings
# -----------
# JWT access token lifetime in minutes
ACCESS_TOKEN_LIFETIME_MINUTES=5
# JWT refresh token lifetime in days
REFRESH_TOKEN_LIFETIME_DAYS=30

# MinIO Settings
# -------------
# MinIO endpoint for Django
MINIO_ENDPOINT=minio:9000
# External MinIO endpoint (for client access) this can contain port number
# Example: localhost:9000 or with domain can be example.com
MINIO_EXTERNAL_ENDPOINT=localhost
# MinIO region (optional)
MINIO_REGION=us-east-1
# MinIO access key (username)
MINIO_ACCESS_KEY=minio
# MinIO secret key (password)
MINIO_SECRET_KEY=minio123
# Use HTTPS for MinIO
MINIO_USE_HTTPS=False
# Use HTTPS for external MinIO endpoint
MINIO_EXTERNAL_ENDPOINT_USE_HTTPS=False
# MinIO URL expiry in hours
MINIO_URL_EXPIRY_HOURS=7
# Check bucket consistency on startup
MINIO_CONSISTENCY_CHECK_ON_START=True
# Private bucket name
MINIO_PRIVATE_BUCKET=private
# Public bucket name
MINIO_PUBLIC_BUCKET=public
# Check bucket existence on save
MINIO_BUCKET_CHECK_ON_SAVE=False
# MinIO browser redirect URL
MINIO_BROWSER_REDIRECT_URL=http://localhost/minio-console/
# MinIO server URL
MINIO_SERVER_URL=http://localhost/

# CORS Settings
# ------------
# Trusted origins for CSRF (comma-separated) read more at https://docs.djangoproject.com/en/4.2/ref/settings/#csrf-trusted-origins
CSRF_TRUSTED_ORIGINS=
# Allowed origins for CORS (comma-separated) read more at https://github.com/adamchainz/django-cors-headers?tab=readme-ov-file#cors_allowed_origins-sequencestr
CORS_ALLOWED_ORIGINS=
# Allowed origin regexes for CORS (comma-separated) read more at https://github.com/adamchainz/django-cors-headers?tab=readme-ov-file#cors_allowed_origin_regexes-sequencestr--patternstr
CORS_ALLOWED_ORIGIN_REGEXES=
# Allow all origins (not recommended for production) read more at https://github.com/adamchainz/django-cors-headers?tab=readme-ov-file#cors_allow_all_origins-bool
CORS_ALLOW_ALL_ORIGINS=False

# Authentication Settings
# ---------------------
# Enterprise mode
# The following settings are required for enterprise mode and you cannot use them in OpenSource version
IS_ENTERPRISE_MODE_ACTIVE=False
# Enable login functionality
IS_LOGIN_ACTIVE=True
# Enable signup functionality
IS_SIGNUP_ACTIVE=False
# Enable GitHub login
IS_GITHUB_LOGIN_ACTIVE=False
# Enable Google login
IS_GOOGLE_LOGIN_ACTIVE=False
# GitHub OAuth credentials
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
# Google OAuth credentials
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Email Settings
# -------------
# Email backend
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
# SMTP host
EMAIL_HOST=
# SMTP port
EMAIL_PORT=587
# Use TLS for SMTP
EMAIL_USE_TLS=True
# SMTP username
EMAIL_HOST_USER=
# SMTP password
EMAIL_HOST_PASSWORD=
# Default from email
DEFAULT_FROM_EMAIL=

# Scrapy Settings
# --------------
# User agent for web scraping
SCRAPY_USER_AGENT="WaterCrawl/0.5.0 (+https://github.com/watercrawl/watercrawl)"
# Obey robots.txt rules
SCRAPY_ROBOTSTXT_OBEY=True
# Concurrent requests
SCRAPY_CONCURRENT_REQUESTS=16
# Download delay between requests (seconds)
SCRAPY_DOWNLOAD_DELAY=0
# Concurrent requests per domain
SCRAPY_CONCURRENT_REQUESTS_PER_DOMAIN=4
# Concurrent requests per IP
SCRAPY_CONCURRENT_REQUESTS_PER_IP=4
# Enable cookies
SCRAPY_COOKIES_ENABLED=False
# Enable HTTP cache
SCRAPY_HTTPCACHE_ENABLED=True
# HTTP cache expiration (seconds)
SCRAPY_HTTPCACHE_EXPIRATION_SECS=3600
# HTTP cache directory
SCRAPY_HTTPCACHE_DIR=httpcache
# Scrapy log level
SCRAPY_LOG_LEVEL=ERROR

# Google API credentials
SCRAPY_GOOGLE_API_KEY=
# Google Custom Search Engine ID
SCRAPY_GOOGLE_CSE_ID=

# Scrapy Sitemap Settings
# Maximum number of sitemap URLs
SCRAPY_MAX_NUMBER_OF_SITEMAP_URLS=20000
# Maximum number of pages to crawl
SCRAPY_SITEMAP_CRAWL_PAGE_LIMIT=100

# Playwright Settings
# -----------------
# Playwright server URL
PLAYWRIGHT_SERVER=http://playwright:8000
# Playwright API key
PLAYWRIGHT_API_KEY=your-secret-api-key
# Playwright port
PLAYWRIGHT_PORT=8000
# Playwright host
PLAYWRIGHT_HOST=0.0.0.0

# Integration Settings
# ------------------
# OpenAI API key
OPENAI_API_KEY=
# Stripe API keys
STRIPE_SECRET_KEY=
STRIPE_WEBHOOK_SECRET=
# Google Analytics ID
GOOGLE_ANALYTICS_ID=

# Feature Flags
# ------------

# Maximum crawl depth (-1 for unlimited)
MAX_CRAWL_DEPTH=-1
# Capture usage history
CAPTURE_USAGE_HISTORY=True

# Frontend Settings
# ---------------
# API base URL for frontend it can be absolute or relative URL e.g. http://localhost/api or /api
API_BASE_URL=/api


# Plugin Settings
# ---------------
# Extra requirements for plugins
WATER_CRAWL_PLUGINS=watercrawl_openai.OpenAIPlugin
OPENAI_API_KEY=

# OpenSearch Settings
# -------------------
# OpenSearch initial admin password
OPENSEARCH_PASSWORD=someStrongPAssw0rd
# OpenSearch Dashboards exposed port (default: 5601)
DASHBOARDS_HOST_PORT=127.0.0.1:5601
