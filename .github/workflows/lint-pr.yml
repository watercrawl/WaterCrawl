name: Lint Pull Request

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: write
  pull-requests: write

jobs:
  lint-backend:
    name: Lint Backend Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR branch safely
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ github.event.pull_request.head.repo.full_name == github.repository && secrets.GITHUB_TOKEN || '' }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          cache: 'pip'
      
      - name: Install Poetry
        run: |
          pip install poetry==2.0.1
          poetry --version
      
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
          poetry config --list
      
      - name: Install dependencies
        working-directory: ./backend
        run: |
          poetry install --no-root --sync --no-cache
        
      - name: Lint backend with Ruff
        id: lint_backend
        working-directory: ./backend
        run: |
          # Run ruff with auto-fix
          poetry run ruff check .
          poetry run ruff format .
           
      - name: Try auto-fix for local branches and commit
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.lint_backend.outcome != 'success'
        working-directory: ./backend
        run: |
          poetry run ruff check --fix .
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Exclude lockfiles from being committed (if they exist)
          git restore --staged **/pnpm-lock.yaml 2>/dev/null || true
          
          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Auto-fix: Backend linting issues"
            git push origin HEAD
            echo "Changes committed and pushed to source branch"
          else
            echo "No changes to commit"
          fi
      
      - name: Fail if linting issues for remote branches
        if: github.event.pull_request.head.repo.full_name != github.repository && steps.lint_backend.outcome != 'success'
        run: |
          echo "Linting issues found in remote branch"
          echo "Please fix the linting issues and push the changes to the source branch with following command:"
          echo "cd backend && poetry run ruff check --fix . && poetry run ruff format ."
          exit 1
        
      
      - name: Verify all issues are fixed
        working-directory: ./backend
        run: |
          # Run again without --fix to see if there are any issues that couldn't be fixed
          poetry run ruff check .
  
  lint-frontend:
    name: Lint Frontend Code
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout PR branch safely
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          token: ${{ github.event.pull_request.head.repo.full_name == github.repository && secrets.GITHUB_TOKEN || '' }}
      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: './frontend/pnpm-lock.yaml'
      
      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install
      
      - name: Lint and fix frontend with ESLint
        id: lint_frontend
        working-directory: ./frontend
        run: |
          # Attempt to fix issues automatically
          pnpm run lint
      
      - name: Try auto-fix for local branches and commit
        if: github.event.pull_request.head.repo.full_name == github.repository && steps.lint_frontend.outcome != 'success'
        working-directory: ./frontend
        run: |
          pnpm run lint:fix
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          
          # Exclude lockfiles from being committed (if they exist)
          git restore --staged **/pnpm-lock.yaml 2>/dev/null || true
          
          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Auto-fix: Frontend linting issues"
            git push origin HEAD
            echo "Changes committed and pushed to source branch"
          else
            echo "No changes to commit"
          fi
      
      - name: Fail if linting issues for remote branches
        if: github.event.pull_request.head.repo.full_name != github.repository && steps.lint_frontend.outcome != 'success'
        run: |
          echo "Linting issues found in remote branch"
          echo "Please fix the linting issues and push the changes to the source branch with following command:"
          echo "cd frontend && pnpm run lint:fix"
          exit 1
        
      
      - name: Verify all issues are fixed
        working-directory: ./frontend
        run: |
          # Run again without fixing to see if there are any issues that couldn't be fixed
          pnpm run lint || exit 1
