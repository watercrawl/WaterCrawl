# Generated by Django 5.2.3 on 2025-08-11 08:29

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0012_teaminvitation_invitation_token'),
    ]

    operations = [
        migrations.CreateModel(
            name='LLMModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Name')),
                ('key', models.CharField(max_length=255, verbose_name='Key')),
                ('provider_name', models.CharField(choices=[('openai', 'OpenAI'), ('watercrawl', 'WaterCrawl')], default='openai', max_length=255, verbose_name='Provider')),
                ('visibility_level', models.CharField(choices=[('not_available', 'Not Available'), ('available', 'Available'), ('team_only', 'Team Only'), ('premium', 'Premium')], default='available', max_length=255, verbose_name='Visibility Level')),
                ('min_temperature', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Min Temperature')),
                ('max_temperature', models.FloatField(blank=True, default=2.0, null=True, verbose_name='Max Temperature')),
                ('default_temperature', models.FloatField(blank=True, default=0.7, null=True, verbose_name='Default Temperature')),
            ],
            options={
                'verbose_name': 'Model',
                'verbose_name_plural': 'Models',
            },
        ),
        migrations.CreateModel(
            name='EmbeddingModel',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider_name', models.CharField(choices=[('openai', 'OpenAI'), ('watercrawl', 'WaterCrawl')], default='openai', max_length=255, verbose_name='Provider')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('key', models.CharField(max_length=255, verbose_name='Key')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('dimensions', models.IntegerField(default=1536, verbose_name='Dimensions')),
                ('max_input_length', models.IntegerField(default=8191, verbose_name='Max Input Length')),
                ('truncate', models.CharField(choices=[('start', 'Start'), ('end', 'End')], default='end', max_length=255, verbose_name='Truncate')),
                ('visibility_level', models.CharField(choices=[('not_available', 'Not Available'), ('available', 'Available'), ('team_only', 'Team Only'), ('premium', 'Premium')], default='available', max_length=255, verbose_name='Visibility Level')),
            ],
            options={
                'verbose_name': 'Provider Embedding',
                'verbose_name_plural': 'Provider Embeddings',
                'unique_together': {('provider_name', 'key')},
            },
        ),
        migrations.CreateModel(
            name='ProviderConfig',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('provider_name', models.CharField(choices=[('openai', 'OpenAI'), ('watercrawl', 'WaterCrawl')], default='openai', max_length=255, verbose_name='Provider')),
                ('api_key', models.CharField(max_length=255, verbose_name='API Key')),
                ('base_url', models.CharField(blank=True, max_length=255, null=True, verbose_name='API Base URL')),
                ('temperature', models.FloatField(default=0.7, verbose_name='Temperature')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider_configs', to='user.team', verbose_name='Team')),
            ],
            options={
                'verbose_name': 'Provider Config',
                'verbose_name_plural': 'Provider Configs',
            },
        ),
    ]
